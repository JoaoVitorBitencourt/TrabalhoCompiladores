package Gramatica;

import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;

public class Gramatica {
	public static final Map<String, Integer> DICIONARIO = new HashMap<String, Integer>();

	public static final Map<String, String> TABELAPARSING = new HashMap<String, String>();

	static {
		DICIONARIO.put("PROGRAM", 1);
		DICIONARIO.put("LABEL", 2);
		DICIONARIO.put("CONST", 3);
		DICIONARIO.put("VAR", 4);
		DICIONARIO.put("PROCEDURE", 5);
		DICIONARIO.put("BEGIN", 6);
		DICIONARIO.put("END", 7);
		DICIONARIO.put("INTEGER", 8);
		DICIONARIO.put("ARRAY", 9);
		DICIONARIO.put("OF", 10);
		DICIONARIO.put("CALL", 11);
		DICIONARIO.put("GOTO", 12);
		DICIONARIO.put("IF", 13);
		DICIONARIO.put("THEN", 14);
		DICIONARIO.put("ELSE", 15);
		DICIONARIO.put("WHILE", 16);
		DICIONARIO.put("DO", 17);
		DICIONARIO.put("REPEAT", 18);
		DICIONARIO.put("UNTIL", 19);
		DICIONARIO.put("READLN", 20);
		DICIONARIO.put("WRITELN", 21);
		DICIONARIO.put("OR", 22);
		DICIONARIO.put("AND", 23);
		DICIONARIO.put("NOT", 24);
		DICIONARIO.put("IDENTIFICADOR", 25);
		DICIONARIO.put("INTEIRO", 26);
		DICIONARIO.put("FOR", 27);
		DICIONARIO.put("TO", 28);
		DICIONARIO.put("CASE", 29);
		DICIONARIO.put("+", 30);
		DICIONARIO.put("-", 31);
		DICIONARIO.put("*", 32);
		DICIONARIO.put("/", 33);
		DICIONARIO.put("[", 34);
		DICIONARIO.put("]", 35);
		DICIONARIO.put("(", 36);
		DICIONARIO.put(")", 37);
		DICIONARIO.put(":=", 38);
		DICIONARIO.put(":", 39);
		DICIONARIO.put("=", 40);
		DICIONARIO.put(">", 41);
		DICIONARIO.put(">=", 42);
		DICIONARIO.put("<", 43);
		DICIONARIO.put("<=", 44);
		DICIONARIO.put("<>", 45);
		DICIONARIO.put(",", 46);
		DICIONARIO.put(";", 47);
		DICIONARIO.put("LITERAL", 48);
		DICIONARIO.put(".", 49);
		DICIONARIO.put(".", 50);
		DICIONARIO.put("..", 51);

	}

	static {
		DICIONARIO.put("PROGRAMA", 52);
		DICIONARIO.put("BLOCO", 53);
		DICIONARIO.put("DCLROT", 54);
		DICIONARIO.put("LID", 55);
		DICIONARIO.put("REPIDENT", 56);
		DICIONARIO.put("DCLCONST", 57);
		DICIONARIO.put("LDCONST", 58);
		DICIONARIO.put("DCLVAR", 59);
		DICIONARIO.put("LDVAR", 60);
		DICIONARIO.put("TIPO", 61);
		DICIONARIO.put("DCLPROC", 62);
		DICIONARIO.put("DEFPAR", 63);
		DICIONARIO.put("CORPO", 64);
		DICIONARIO.put("REPCOMANDO", 65);
		DICIONARIO.put("COMANDO", 66);
		DICIONARIO.put("RCOMID", 67);
		DICIONARIO.put("RVAR", 68);
		DICIONARIO.put("PARAMETROS", 69);
		DICIONARIO.put("REPPAR", 70);
		DICIONARIO.put("ELSEPARTE", 71);
		DICIONARIO.put("VARIAVEL", 72);
		DICIONARIO.put("VARIAVEL1", 73);
		DICIONARIO.put("REPVARIAVEL", 74);
		DICIONARIO.put("ITEMSAIDA", 75);
		DICIONARIO.put("REPITEM", 76);
		DICIONARIO.put("EXPRESSAO", 77);
		DICIONARIO.put("REPEXPSIMP", 78);
		DICIONARIO.put("EXPSIMP", 79);
		DICIONARIO.put("REPEXP", 80);
		DICIONARIO.put("TERMO", 81);
		DICIONARIO.put("REPTERMO", 82);
		DICIONARIO.put("FATOR", 83);
		DICIONARIO.put("CONDCASE", 84);
		DICIONARIO.put("CONTCASE", 85);
		DICIONARIO.put("RPINTEIRO", 86);
		DICIONARIO.put("SEMEFEITO", 87);

	}

	static {
		TABELAPARSING.put("52,1", "PROGRAM|IDENTIFICADOR|;|BLOCO|.");
		TABELAPARSING.put("53,2", "DCLROT|DCLCONST|DCLVAR|DCLPROC|CORPO");

		TABELAPARSING.put("53,3", "DCLROT|DCLCONST|DCLVAR|DCLPROC|CORPO");
		TABELAPARSING.put("53,4", "DCLROT|DCLCONST|DCLVAR|DCLPROC|CORPO");
		TABELAPARSING.put("53,5", "DCLROT|DCLCONST|DCLVAR|DCLPROC|CORPO");
		TABELAPARSING.put("53,6", "DCLROT|DCLCONST|DCLVAR|DCLPROC|CORPO");

		TABELAPARSING.put("54,2", "LABEL|LID|;");
		TABELAPARSING.put("54,3", "NULL");
		TABELAPARSING.put("54,4", "NULL");
		TABELAPARSING.put("54,5", "NULL");
		TABELAPARSING.put("54,6", "NULL");
		TABELAPARSING.put("55,25", "IDENTIFICADOR|REPIDENT");
		TABELAPARSING.put("56,39", "NULL");

		TABELAPARSING.put("56,46", ",|IDENTIFICADOR|REPIDENT");

		TABELAPARSING.put("56,47", "NULL");
		TABELAPARSING.put("57,3", "CONST|IDENTIFICADOR|=|INTEIRO|;|LDCONST");
		TABELAPARSING.put("57,4", "NULL");
		TABELAPARSING.put("57,5", "NULL");
		TABELAPARSING.put("57,6", "NULL");
		TABELAPARSING.put("58,4", "NULL");
		TABELAPARSING.put("58,5", "NULL");
		TABELAPARSING.put("58,6", "NULL");
		TABELAPARSING.put("58,25", "IDENTIFICADOR|=|INTEIRO|;|LDCONST");
		TABELAPARSING.put("59,4", "VAR|LID|:|TIPO|;|LDVAR");
		TABELAPARSING.put("59,5", "NULL");
		TABELAPARSING.put("59,6", "NULL");
		TABELAPARSING.put("60,5", "NULL");
		TABELAPARSING.put("60,6", "NULL");
		TABELAPARSING.put("60,25", "LID|:|TIPO|;|LDVAR");
		TABELAPARSING.put("61,8", "INTEGER");
		TABELAPARSING.put("61,9", "ARRAY|[|INTEIRO|..|INTEIRO|]|OF|INTEGER");
		TABELAPARSING.put("62,5", "PROCEDURE|IDENTIFICADOR|DEFPAR|;|BLOCO|;|DCLPROC");
		TABELAPARSING.put("62,6", "NULL");
		TABELAPARSING.put("63,36", "(|LID|:|INTEGER|)");

		TABELAPARSING.put("63,39", "NULL");
		TABELAPARSING.put("64,6", "BEGIN|COMANDO|REPCOMANDO|END");
		TABELAPARSING.put("65,7", "NULL");
		TABELAPARSING.put("65,47", ";|COMANDO|REPCOMANDO");
		TABELAPARSING.put("66,6", "CORPO");
		TABELAPARSING.put("66,7", "NULL");
		TABELAPARSING.put("66,11", "CALL|IDENTIFICADOR|PARAMETROS");
		TABELAPARSING.put("66,12", "GOTO|IDENTIFICADOR");
		TABELAPARSING.put("66,13", "IF|EXPRESSAO|THEN|COMANDO|ELSEPARTE");
		TABELAPARSING.put("66,15", "NULL");
		TABELAPARSING.put("66,16", "WHILE|EXPRESSAO|DO|COMANDO");
		TABELAPARSING.put("66,18", "REPEAT|COMANDO|UNTIL|EXPRESSAO");
		TABELAPARSING.put("66,19", "NULL");
		TABELAPARSING.put("66,20", "READLN|(|VARIAVEL|REPVARIAVEL|)");
		TABELAPARSING.put("66,21", "WRITELN|(|ITEMSAIDA|REPITEM|)");

		TABELAPARSING.put("66,25", "IDENTIFICADOR|RCOMID");

		TABELAPARSING.put("66,27", "FOR|IDENTIFICADOR|:=|EXPRESSAO|TO|EXPRESSAO|DO|COMANDO");
		TABELAPARSING.put("66,29", "CASE|EXPRESSAO|OF|CONDCASE|END");
		TABELAPARSING.put("66,47", "NULL");
		TABELAPARSING.put("67,34", "RVAR|:=|EXPRESSAO");
		TABELAPARSING.put("67,38", "RVAR|:=|EXPRESSAO");

		TABELAPARSING.put("67,39", ":|COMANDO");
		TABELAPARSING.put("68,34", "[|EXPRESSAO|]");
		TABELAPARSING.put("68,38", "NULL");
		TABELAPARSING.put("69,7", "NULL");
		TABELAPARSING.put("69,15", "NULL");
		TABELAPARSING.put("69,19", "NULL");
		TABELAPARSING.put("69,36", "(|EXPRESSAO|REPPAR|)");
		TABELAPARSING.put("69,47", "NULL");
		TABELAPARSING.put("70,37", "NULL");
		TABELAPARSING.put("70,46", ",|EXPRESSAO|REPPAR");
		TABELAPARSING.put("71,7", "NULL");
		TABELAPARSING.put("71,15", "ELSE|COMANDO");
		TABELAPARSING.put("71,19", "NULL");
		TABELAPARSING.put("71,47", "NULL");
		TABELAPARSING.put("72,25", "IDENTIFICADOR|VARIAVEL1");
		TABELAPARSING.put("73,7", "NULL");
		TABELAPARSING.put("73,10", "NULL");
		TABELAPARSING.put("73,14", "NULL");
		TABELAPARSING.put("73,15", "NULL");
		TABELAPARSING.put("73,17", "NULL");
		TABELAPARSING.put("73,19", "NULL");
		TABELAPARSING.put("73,22", "NULL");
		TABELAPARSING.put("73,23", "NULL");
		TABELAPARSING.put("73,28", "NULL");
		TABELAPARSING.put("73,30", "NULL");
		TABELAPARSING.put("73,31", "NULL");
		TABELAPARSING.put("73,32", "NULL");
		TABELAPARSING.put("73,33", "NULL");
		TABELAPARSING.put("73,34", "[|EXPRESSAO|]");
		TABELAPARSING.put("73,35", "NULL");
		TABELAPARSING.put("73,37", "NULL");
		TABELAPARSING.put("73,40", "NULL");
		TABELAPARSING.put("73,41", "NULL");
		TABELAPARSING.put("73,42", "NULL");
		TABELAPARSING.put("73,43", "NULL");
		TABELAPARSING.put("73,44", "NULL");
		TABELAPARSING.put("73,45", "NULL");
		TABELAPARSING.put("73,46", "NULL");
		TABELAPARSING.put("73,47", "NULL");
		TABELAPARSING.put("74,37", "NULL");
		TABELAPARSING.put("74,46", ",|VARIAVEL|REPVARIAVEL");
		TABELAPARSING.put("75,24", "EXPRESSAO");
		TABELAPARSING.put("75,25", "EXPRESSAO");
		TABELAPARSING.put("75,26", "EXPRESSAO");
		TABELAPARSING.put("75,30", "EXPRESSAO");
		TABELAPARSING.put("75,31", "EXPRESSAO");
		TABELAPARSING.put("75,36", "EXPRESSAO");
		TABELAPARSING.put("75,48", "LITERAL");
		TABELAPARSING.put("76,37", "NULL");
		TABELAPARSING.put("76,46", ",|ITEMSAIDA|REPITEM");
		TABELAPARSING.put("77,24", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("77,25", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("77,26", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("77,30", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("77,31", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("77,36", "EXPSIMP|REPEXPSIMP");
		TABELAPARSING.put("78,7", "NULL");
		TABELAPARSING.put("78,10", "NULL");
		TABELAPARSING.put("78,14", "NULL");
		TABELAPARSING.put("78,15", "NULL");
		TABELAPARSING.put("78,17", "NULL");
		TABELAPARSING.put("78,19", "NULL");
		TABELAPARSING.put("78,28", "NULL");
		TABELAPARSING.put("78,35", "NULL");
		TABELAPARSING.put("78,37", "NULL");
		TABELAPARSING.put("78,40", "=|EXPSIMP");
		TABELAPARSING.put("78,41", ">|EXPSIMP");
		TABELAPARSING.put("78,42", ">=|EXPSIMP");
		TABELAPARSING.put("78,43", "<|EXPSIMP"); // Linha alterada - <item codigo="78,43" derivacao="&lt;|EXPSIMP"
													// /><!-- Sinal de menor -->
		TABELAPARSING.put("78,44", "<=|EXPSIMP"); // Linha alterada - <item codigo="78,44" derivacao="&lt;=|EXPSIMP"
													// /><!-- Sinal de menor ou igual -->
		TABELAPARSING.put("78,45", "!=|EXPSIMP"); // Linha alterada - <item codigo="78,45" derivacao="&lt;&gt;|EXPSIMP"
													// /><!-- Sinal de diferente -->
		TABELAPARSING.put("78,46", "NULL");
		TABELAPARSING.put("78,47", "NULL");
		TABELAPARSING.put("79,24", "TERMO|REPEXP");
		TABELAPARSING.put("79,25", "TERMO|REPEXP");
		TABELAPARSING.put("79,26", "TERMO|REPEXP");
		TABELAPARSING.put("79,30", "+|TERMO|REPEXP");
		TABELAPARSING.put("79,31", "-|TERMO|REPEXP");
		TABELAPARSING.put("79,36", "TERMO|REPEXP");
		TABELAPARSING.put("80,7", "NULL");
		TABELAPARSING.put("80,10", "NULL");
		TABELAPARSING.put("80,14", "NULL");
		TABELAPARSING.put("80,15", "NULL");
		TABELAPARSING.put("80,17", "NULL");
		TABELAPARSING.put("80,19", "NULL");
		TABELAPARSING.put("80,22", "OR|TERMO|REPEXP");
		TABELAPARSING.put("80,28", "NULL");
		TABELAPARSING.put("80,30", "+|TERMO|REPEXP");
		TABELAPARSING.put("80,31", "-|TERMO|REPEXP");
		TABELAPARSING.put("80,35", "NULL");
		TABELAPARSING.put("80,37", "NULL");
		TABELAPARSING.put("80,40", "NULL");
		TABELAPARSING.put("80,41", "NULL");
		TABELAPARSING.put("80,42", "NULL");
		TABELAPARSING.put("80,43", "NULL");
		TABELAPARSING.put("80,44", "NULL");
		TABELAPARSING.put("80,45", "NULL");
		TABELAPARSING.put("80,46", "NULL");
		TABELAPARSING.put("80,47", "NULL");
		TABELAPARSING.put("81,24", "FATOR|REPTERMO");
		TABELAPARSING.put("81,25", "FATOR|REPTERMO");
		TABELAPARSING.put("81,26", "FATOR|REPTERMO");
		TABELAPARSING.put("81,36", "FATOR|REPTERMO");
		TABELAPARSING.put("82,7", "NULL");
		TABELAPARSING.put("82,10", "NULL");
		TABELAPARSING.put("82,14", "NULL");
		TABELAPARSING.put("82,15", "NULL");
		TABELAPARSING.put("82,17", "NULL");
		TABELAPARSING.put("82,19", "NULL");
		TABELAPARSING.put("82,22", "NULL");
		TABELAPARSING.put("82,23", "AND|FATOR|REPTERMO");
		TABELAPARSING.put("82,28", "NULL");
		TABELAPARSING.put("82,30", "NULL");
		TABELAPARSING.put("82,31", "NULL");
		TABELAPARSING.put("82,32", "*|FATOR|REPTERMO");
		TABELAPARSING.put("82,33", "/|FATOR|REPTERMO");
		TABELAPARSING.put("82,35", "NULL");
		TABELAPARSING.put("82,37", "NULL");
		TABELAPARSING.put("82,40", "NULL");
		TABELAPARSING.put("82,41", "NULL");
		TABELAPARSING.put("82,42", "NULL");
		TABELAPARSING.put("82,43", "NULL");
		TABELAPARSING.put("82,44", "NULL");
		TABELAPARSING.put("82,45", "NULL");
		TABELAPARSING.put("82,46", "NULL");
		TABELAPARSING.put("82,47", "NULL");
		TABELAPARSING.put("83,24", "NOT|FATOR");
		TABELAPARSING.put("83,25", "VARIAVEL");
		TABELAPARSING.put("83,26", "INTEIRO");
		TABELAPARSING.put("83,36", "(|EXPRESSAO|)");
		TABELAPARSING.put("84,26", "INTEIRO|RPINTEIRO|:|COMANDO|CONTCASE");
		TABELAPARSING.put("85,7", "NULL");
		TABELAPARSING.put("85,47", ";|CONDCASE");
		TABELAPARSING.put("86,39", "NULL");
		TABELAPARSING.put("86,46", ",|INTEIRO|RPINTEIRO");

	}

	public static Integer[] dadosCruzados(String palavra) {
		if ((palavra != null) && (palavra.length() != 0) && !"null".equals(palavra)) {

			// - tem a mesma função do método split, quebra a linha em determinado caracter
			StringTokenizer tokenizer = new StringTokenizer(palavra, "|");
			Integer dados[] = new Integer[tokenizer.countTokens()];
			int i = 0;

			while (tokenizer.hasMoreTokens()) {
				String string = tokenizer.nextToken();
				dados[i++] = DICIONARIO.get(string);
			}

			return dados;
		}
		return null;
	}
}
